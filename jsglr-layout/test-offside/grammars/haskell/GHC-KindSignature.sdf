module GHC-KindSignature

imports Haskell-Syntax

exports
	
	context-free syntax
		
		"*"		 		-> AKind {cons("Kind*")}
		"!"				-> AKind {cons("Kind!")}
		"(" Kind ")"	-> AKind {cons("AKind")}
		AKind			-> Kind
		AKind "->" Kind	-> Kind {cons("Kind->")}
		
		
		"::" Kind	-> KindSig {cons("KindSignature")}
		KindSig		-> OptKindSig
					-> OptKindSig {cons("EmptyKindSignature")}
		"(" CType "::" Kind ")" -> AType