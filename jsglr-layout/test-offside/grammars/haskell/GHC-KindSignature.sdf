module GHC-KindSignature

imports Haskell-Syntax
imports Haskell-Operators

exports
	
	context-free syntax
		
		"*"		 		-> AKind {cons("Kind*")}
		"!"				-> AKind {cons("Kind!")}
		"(" Kind ")"	-> AKind {cons("AKind")}
		AKind			-> Kind
		AKind RightArrowOp Kind	-> Kind {ast("Kind->(<1>,<3>)")}
		
		
		ProportionOp Kind	-> KindSig {ast("KindSignature(<2>)")}
		KindSig		-> OptKindSig
					-> OptKindSig {cons("EmptyKindSignature")}
		"(" CType ProportionOp Kind ")" -> AType {ast("KindedType(<1>,<3>)")}