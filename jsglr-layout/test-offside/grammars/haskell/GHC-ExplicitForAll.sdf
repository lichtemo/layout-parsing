module GHC-ExplicitForAll

imports Haskell-Syntax
imports GHC-KindSignature

exports

	context-free syntax
		Var 								-> ForallParam 
		"(" Var KindSig ")" 				-> ForallParam {cons("KindedParam")}
		ForallKeyword ForallParam+ "."		-> Forall {ast("Forall(<2>)")}
		Forall CType 						-> CType {cons("ExplicitForAll")}

	lexical syntax
		"forall"		-> AsciiForallKeyword
		AsciiForallKeyword -> ForallKeyword
		ForallKeyword 	-> ReservedId
		
	lexical restrictions
		AsciiForallKeyword -/- [a-zA-Z0-9\'\_]