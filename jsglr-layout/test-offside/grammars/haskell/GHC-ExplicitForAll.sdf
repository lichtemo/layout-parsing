module GHC-ExplicitForAll

imports Haskell-Syntax

exports

	context-free syntax
		"forall" Var+ "." 		-> Forall {cons("Forall")}
		Vars "::" Forall Context? Type  -> Signdecl {cons("ExplicitForAllSignDecl")}
		
	context-free priorities
		Qvar "@" Exp -> Exp {cons("Named")}
  	  > Exp "::" Forall Context? Type  -> Exp {cons("ExplicitForAllTyped")}

	lexical syntax
		"forall" -> ReservedId0
		
	lexical restrictions
		"forall" -/- [a-zA-Z0-9\'\_]