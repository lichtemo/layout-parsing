module Haskell-Identifier-Sorts
imports Haskell-Syntax

exports
  lexical syntax
    VARID       -> Varid 
    ReservedId  -> Varid {reject}
    VARID       -> Tyvar 
    ReservedId  -> Tyvar {reject}
    ReservedId2 -> Tyvar {reject}

  context-free syntax
    Vars "," Var -> Vars {cons("Snoc")}
    Qvar         -> Vars {cons("Ins")}

  context-free syntax
    "(" ")"      -> Gcon {cons("Unit")}
    "[" "]"      -> Gcon {cons("EmptyList")}
    "(" ","+ ")" -> Gcon {cons("Product")}
    Qcon         -> Gcon 

  context-free syntax
    Varid           -> Qvarid  
    QVARID          -> Qvarid  
    Varid           -> Var     {cons("Var")}
    Qvarid          -> Qvar    
    Varop           -> Op      {cons("Op")}
    Conop           -> Op      {cons("ConOp")}
    Varsym          -> Qvarsym 
    Qvarsym1        -> Qvarsym 
    Varsym          -> Varop   
    "`" Varid "`"   -> Varop   {cons("PrefOp")}
    Qvarsym         -> Qvarop  
    "`" Qvarid "`"  -> Qvarop  {cons("PrefOp")}
    Consym          -> Conop   
    "`" Conid "`"   -> Conop   {cons("PrefCon")}
    Gconsym         -> Qconop  
    "`" Qconid "`"  -> Qconop  {cons("PrefCon")}
    Qvarop          -> Qop     
    Qconop          -> Qop     
    Qconsym         -> Gconsym 
    ConsOp          -> Gconsym 
    CONSOP          -> ConsOp  {cons("ConsOp")}
    Consym          -> Qconsym 
    QCONSYM         -> Qconsym 
    CONSYM          -> Consym  
    "(" Varsym ")"  -> Var     {cons("BinOp")}
    "(" Qvarsym ")" -> Qvar    {cons("BinOp")}
    "(" Consym ")"  -> Con     {cons("BinCon")}
    "(" ConsOp ")"  -> Qcon    {cons("BinCon")}
    "(" Qconsym ")" -> Qcon    {cons("BinCon")}

  context-free syntax
    VARSYM  -> Varsym   
    QVARSYM -> Qvarsym1 

  context-free syntax
    CONID          -> Tycon   
    Tycon          -> Qtycon  
    QCONID         -> Qtycon  
    Tycon          -> Tycls   
    Qtycon         -> Qtycls  
    Qtycon         -> OQtycon 
    "(" Consym ")" -> OQtycon 
    CONID          -> Conid   
    Conid          -> Qconid  
    QCONID         -> Qconid  
    Conid          -> Con     {cons("ConId")}
    Qconid         -> Qcon    

  context-free restrictions
    Qconid
    -/- [\46] . ( ( [\33] | ( ( [\35-\38] | ( ( [\42-\43] | ( ( [\45-\47] | ( ( [\60-\90] | ( ( [\92] | ( ( [\94] | ( ( [\97-\122] | ( ( [\124] | [\126] ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
    Qconid -/- [\46] . [\95]
    Qconid -/- [\46] . [\58]
    Qtycon
    -/- [\46] . ( ( [\33] | ( ( [\35-\38] | ( ( [\42-\43] | ( ( [\45-\47] | ( ( [\60-\90] | ( ( [\92] | ( ( [\94] | ( ( [\97-\122] | ( ( [\124] | [\126] ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
    Qtycon -/- [\46] . [\95]
    Qtycon -/- [\46] . [\58]

  lexical syntax
    CONID -> Modid 

  syntax
    <Modid-LEX>            -> Modid        
    Modid "." <VARID-LEX>  -> <QVARID-CF>  {cons("QVarId")}
    Modid "." <CONID-LEX>  -> <QCONID-CF>  {cons("QConId")}
    Modid "." <VARSYM-LEX> -> <QVARSYM-CF> {cons("QVarSym")}
    Modid "." <CONSYM-LEX> -> <QCONSYM-CF> {cons("QConSym")}

  syntax
    <CONID-LEX> "." <Modid-LEX> -> QModid     {cons("QModId")}
    <CONID-LEX> "." QModid      -> QModid     {cons("QModId")}
    QModid                      -> Modid      
    QModid                      -> <Modid-CF> 