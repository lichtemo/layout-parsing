module Haskell-Import-Export

imports Haskell-Identifier-Sorts
imports Haskell-Operators

exports
  context-free syntax
  	{ Export "," }* -> Exportlist {cons("Exportlist")}
  	Exportlist "," -> Exportlist
    "(" Exportlist ")" 		-> Exports

    Qvar 							-> Export
    OQtycon 						-> Export
    OQtycon "(" DoubleDotOp ")" 	-> Export {ast("<1>")}
    OQtycon "(" ")" 				-> Export
    OQtycon "("{Qcname ","}+ ")" 	-> Export
    "module" Modid 					-> Export

    Qvar 			-> Qcname
    Gcon 			-> Qcname

  context-free syntax  
    "import" Src? Qualified?
             Modid As? Impspec? -> Importdecl 	{cons("Import")}
    "{-# SOURCE" "#-}" 		-> Src 		{cons("SOURCE")}
    "qualified" 		-> Qualified 	{cons("Qualified")}
    "as" Modid 			-> As 		{cons("As")}
    "(" Exportlist ")" 		-> Impspec
    "hiding" "(" Exportlist ")" -> Impspec 	{cons("Hiding")}

